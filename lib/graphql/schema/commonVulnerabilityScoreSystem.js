const {CVSS31_Help} = require('../../cvss-helpers/cvsscalc31_helptext')
const help = CVSS31_Help.helpText_en;
const CommonVulnerabilityScoreSystem = `
  type CommonVulnerabilityScoreSystem { 
    _id: ID!
    schema_version: String!
    attackVector: AttackVectorType!
    attackComplexity: AttackComplexityType!
    privilegesRequired: PrivilegesRequiredType!
    userInteraction: UserInteractionType!
    scope: ScopeType!
    confidentialityImpact: CiaType!
    integrityImpact: CiaType!
    availabilityImpact: CiaType!
    exploitCodeMaturity: ExploitCodeMaturityType!
    remediationLevel: RemediationLevelType!
    reportConfidence: ConfidenceType!
    confidentialityRequirement: CiaRequirementType!
    integrityRequirement: CiaRequirementType!
    availabilityRequirement: CiaRequirementType!
    modifiedAttackVector: ModifiedAttackVectorType!
    modifiedAttackComplexity: ModifiedAttackComplexityType!
    modifiedPrivilegesRequired: ModifiedPrivilegesRequiredType!
    modifiedUserInteraction: ModifiedUserInteractionType!
    modifiedScope: ModifiedScopeType!
    modifiedConfidentialityImpact: ModifiedCiaType!
    modifiedIntegrityImpact: ModifiedCiaType!
    modifiedAvailabilityImpact: ModifiedCiaType!
    vulnerability: Vulnerability!
    cvssScores: CvssScores!
    createdAt: String!
    updatedAt: String!
  }
`

const CVSSInput = `
  input CVSSInput {
    attackVector: AttackVectorType
    attackComplexity: AttackComplexityType
    privilegesRequired: PrivilegesRequiredType
    userInteraction: UserInteractionType
    scope: ScopeType
    confidentialityImpact: CiaType
    integrityImpact: CiaType
    availabilityImpact: CiaType
    exploitCodeMaturity: ExploitCodeMaturityType
    remediationLevel: RemediationLevelType
    reportConfidence: ConfidenceType
    confidentialityRequirement: CiaRequirementType
    integrityRequirement: CiaRequirementType
    availabilityRequirement: CiaRequirementType
    modifiedAttackVector: ModifiedAttackVectorType
    modifiedAttackComplexity: ModifiedAttackComplexityType
    modifiedPrivilegesRequired: ModifiedPrivilegesRequiredType
    modifiedUserInteraction: ModifiedUserInteractionType
    modifiedScope: ModifiedScopeType
    modifiedConfidentialityImpact: ModifiedCiaType
    modifiedIntegrityImpact: ModifiedCiaType
    modifiedAvailabilityImpact: ModifiedCiaType
  }
`

const AttackVectorType = `
  "${help.AV_Heading}" enum AttackVectorType {
    "${help.AV_N_Label}" NETWORK
    "${help.AV_A_Label}" ADJACENT_NETWORK
    "${help.AV_L_Label}" LOCAL
    "${help.AV_P_Label}" PHYSICAL
  }
`
const ModifiedAttackVectorType = `
  "${help.MAV_Heading}" enum ModifiedAttackVectorType {
   "${help.MAV_N_Label}" NETWORK
   "${help.MAV_A_Label}" ADJACENT_NETWORK
   "${help.MAV_L_Label}" LOCAL
   "${help.MAV_P_Label}" PHYSICAL
   "${help.MAV_X_Label}" NOT_DEFINED
  }
`

const AttackComplexityType = `
  "${help.AC_Heading}" enum AttackComplexityType {
   "${help.AC_H_Label}" HIGH
   "${help.AC_L_Label}" LOW
  }
`

const ModifiedAttackComplexityType = `
  "${help.MAC_Heading}" enum ModifiedAttackComplexityType {
   "${help.MAC_H_Label}" HIGH
   "${help.MAC_L_Label}" LOW
   "${help.MAC_X_Label}" NOT_DEFINED
  }
`

const PrivilegesRequiredType = `
  "${help.PR_Heading}" enum PrivilegesRequiredType {
   "${help.PR_H_Label}" HIGH
   "${help.PR_L_Label}" LOW
   "${help.PR_N_Label}" NONE
  }
`

const ModifiedPrivilegesRequiredType = `
  "${help.MPR_Heading}" enum ModifiedPrivilegesRequiredType {
   "${help.MPR_H_Label}" HIGH
   "${help.MPR_L_Label}" LOW
   "${help.MPR_N_Label}" NONE
   "${help.MPR_X_Label}" NOT_DEFINED
  }
`
const CiaType = `
  "${help.C_Heading}" enum CiaType {
   "${help.C_H_Label}" HIGH
   "${help.C_L_Label}" LOW
   "${help.C_N_Label}" NONE
  }
`

const ModifiedCiaType = `
  "${help.MC_Heading}" enum ModifiedCiaType {
   "${help.MC_H_Label}" HIGH
   "${help.MC_L_Label}" LOW
   "${help.MC_N_Label}" NONE
   "${help.MC_X_Label}" NOT_DEFINED
  }
`

const UserInteractionType = `
  "${help.UI_Heading}" enum UserInteractionType {
   "${help.UI_N_Label}" NONE
   "${help.UI_R_Label}" REQUIRED
  }
`

const ModifiedUserInteractionType = `
  "${help.MUI_Heading}" enum ModifiedUserInteractionType {
   "${help.MUI_N_Label}" NONE
   "${help.MUI_R_Label}" REQUIRED
   "${help.MUI_X_Label}" NOT_DEFINED
  }
`

const ScopeType = `
  "${help.S_Heading}" enum ScopeType {
   "${help.S_U_Label}" UNCHANGED
   "${help.S_C_Label}" CHANGED
  }
`

const ModifiedScopeType = `
  "${help.MS_Heading}" enum ModifiedScopeType {
    "${help.MS_U_Label}" UNCHANGED
    "${help.MS_C_Label}" CHANGED
    "${help.MS_X_Label}" NOT_DEFINED
  }
`


const ExploitCodeMaturityType = `
  "${help.E_Heading}" enum ExploitCodeMaturityType {
    "${help.E_U_Label}" UNPROVEN
    "${help.E_P_Label}" PROOF_OF_CONCEPT
    "${help.E_F_Label}" FUNCTIONAL
    "${help.E_H_Label}" HIGH
    "${help.E_X_Label}"  NOT_DEFINED
  }
`

const RemediationLevelType = `
  "${help.RL_Heading}" enum RemediationLevelType {
    "${help.RL_O_Label}" OFFICIAL_FIX
    "${help.RL_T_Label}" TEMPORARY_FIX
    "${help.RL_W_Label}" WORKAROUND
    "${help.RL_U_Label}" UNAVAILABLE
    "${help.RL_X_Label}" NOT_DEFINED
  }
`

const ConfidenceType = `
  "${help.RC_Heading}" enum ConfidenceType {
    "${help.RC_U_Label}" UNKNOWN
    "${help.RC_R_Label}" REASONABLE
    "${help.RC_C_Label}" CONFIRMED
    "${help.RC_X_Label}" NOT_DEFINED
  }
`
const CiaRequirementType = `
  "${help.CR_Heading}" enum CiaRequirementType {
   "${help.CR_H_Label}" HIGH
   "${help.CR_M_Label}" MEDIUM
   "${help.CR_L_Label}" LOW
   "${help.CR_X_Label}" NOT_DEFINED
  }
`

const SeverityType = `
  enum SeverityType {
    NONE
    LOW
    MEDIUM
    HIGH
    CRITICAL
  }
`


/**
 * Common Vulnerability Score System import Schema
 */

const CVSSImportSchema = `
${CommonVulnerabilityScoreSystem}
${AttackComplexityType}
${AttackVectorType}
${CiaType}
${CiaRequirementType}
${ConfidenceType}
${ExploitCodeMaturityType}
${ModifiedAttackComplexityType}
${ModifiedAttackVectorType}
${ModifiedCiaType}
${ModifiedPrivilegesRequiredType}
${ModifiedScopeType}
${ModifiedUserInteractionType}
${PrivilegesRequiredType}
${RemediationLevelType}
${ScopeType}
${SeverityType}
${UserInteractionType}
${CVSSInput}
`

module.exports = {CVSSImportSchema}
