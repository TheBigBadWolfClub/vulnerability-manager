const CommonVulnerabilityScoreSystem = `
  type CommonVulnerabilityScoreSystem { 
    _id: ID!
    schema_version: String!
    attackVector: AttackVectorType!
    attackComplexity: AttackComplexityType!
    privilegesRequired: PrivilegesRequiredType!
    userInteraction: UserInteractionType!
    scope: ScopeType!
    confidentialityImpact: CiaType!
    integrityImpact: CiaType!
    availabilityImpact: CiaType!
    exploitCodeMaturity: ExploitCodeMaturityType!
    remediationLevel: RemediationLevelType!
    reportConfidence: ConfidenceType!
    confidentialityRequirement: CiaRequirementType!
    integrityRequirement: CiaRequirementType!
    availabilityRequirement: CiaRequirementType!
    modifiedAttackVector: ModifiedAttackVectorType!
    modifiedAttackComplexity: ModifiedAttackComplexityType!
    modifiedPrivilegesRequired: ModifiedPrivilegesRequiredType!
    modifiedUserInteraction: ModifiedUserInteractionType!
    modifiedScope: ModifiedScopeType!
    modifiedConfidentialityImpact: ModifiedCiaType!
    modifiedIntegrityImpact: ModifiedCiaType!
    modifiedAvailabilityImpact: ModifiedCiaType!
    vulnerability: Vulnerability!
    cvssScores: CvssScores!
    createdAt: String!
    updatedAt: String!
  }
`

const CVSSInput = `
  type CVSSInput { 
    attackVector: AttackVectorType
    attackComplexity: AttackComplexityType
    privilegesRequired: PrivilegesRequiredType
    userInteraction: UserInteractionType
    scope: ScopeType
    confidentialityImpact: CiaType
    integrityImpact: CiaType
    availabilityImpact: CiaType
    exploitCodeMaturity: ExploitCodeMaturityType
    remediationLevel: RemediationLevelType
    reportConfidence: ConfidenceType
    confidentialityRequirement: CiaRequirementType
    integrityRequirement: CiaRequirementType
    availabilityRequirement: CiaRequirementType
    modifiedAttackVector: ModifiedAttackVectorType
    modifiedAttackComplexity: ModifiedAttackComplexityType
    modifiedPrivilegesRequired: ModifiedPrivilegesRequiredType
    modifiedUserInteraction: ModifiedUserInteractionType
    modifiedScope: ModifiedScopeType
    modifiedConfidentialityImpact: ModifiedCiaType
    modifiedIntegrityImpact: ModifiedCiaType
    modifiedAvailabilityImpact: ModifiedCiaType
  }
`

const AttackVectorType = `
  enum AttackVectorType {
   NETWORK
   ADJACENT_NETWORK
   LOCAL
   PHYSICAL
  }
`
const ModifiedAttackVectorType = `
  enum ModifiedAttackVectorType {
   NETWORK
   ADJACENT_NETWORK
   LOCAL
   PHYSICAL
   NOT_DEFINED
  }
`

const AttackComplexityType = `
  enum AttackComplexityType {
   HIGH
   LOW
  }
`

const ModifiedAttackComplexityType = `
  enum ModifiedAttackComplexityType {
   HIGH
   LOW
   NOT_DEFINED
  }
`

const PrivilegesRequiredType = `
  enum PrivilegesRequiredType {
   HIGH
   LOW
   NONE
  }
`

const ModifiedPrivilegesRequiredType = `
  enum ModifiedPrivilegesRequiredType {
   HIGH
   LOW
   NONE
   NOT_DEFINED
  }
`
const CiaType = `
  enum CiaType {
   HIGH
   LOW
   NONE
  }
`

const ModifiedCiaType = `
  enum ModifiedCiaType {
   HIGH
   LOW
   NONE
   NOT_DEFINED
  }
`

const UserInteractionType = `
  enum UserInteractionType {
   NONE
   REQUIRED
  }
`

const ModifiedUserInteractionType = `
  enum ModifiedUserInteractionType {
   NONE
   REQUIRED
   NOT_DEFINED
  }
`

const ScopeType = `
  enum ScopeType {
   UNCHANGED
   CHANGED
  }
`

const ModifiedScopeType = `
  enum ModifiedScopeType {
   UNCHANGED
   CHANGED
   NOT_DEFINED
  }
`


const ExploitCodeMaturityType = `
  enum ExploitCodeMaturityType {
    UNPROVEN
    PROOF_OF_CONCEPT
    FUNCTIONAL
    HIGH
     NOT_DEFINED
  }
`

const RemediationLevelType = `
  enum RemediationLevelType {
    OFFICIAL_FIX
    TEMPORARY_FIX
    WORKAROUND
    UNAVAILABLE
    NOT_DEFINED
  }
`

const ConfidenceType = `
  enum ConfidenceType {
    UNKNOWN
    REASONABLE
    CONFIRMED
    NOT_DEFINED
  }
`
const CiaRequirementType = `
  enum CiaRequirementType {
   HIGH
   MEDIUM
   LOW
   NOT_DEFINED
  }
`

const SeverityType = `
  enum SeverityType {
    NONE
    LOW
    MEDIUM
    HIGH
    CRITICAL
  }
`


/**
 * Common Vulnerability Score System import Schema
 */

const CVSSImportSchema = `
${CommonVulnerabilityScoreSystem}
${AttackComplexityType}
${AttackVectorType}
${CiaType}
${CiaRequirementType}
${ConfidenceType}
${ExploitCodeMaturityType}
${ModifiedAttackComplexityType}
${ModifiedAttackVectorType}
${ModifiedCiaType}
${ModifiedPrivilegesRequiredType}
${ModifiedScopeType}
${ModifiedUserInteractionType}
${PrivilegesRequiredType}
${RemediationLevelType}
${ScopeType}
${SeverityType}
${UserInteractionType}
${CVSSInput}
`

module.exports = {CVSSImportSchema}
