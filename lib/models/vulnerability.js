const mongoose = require('mongoose');
const Schema = mongoose.Schema;
const CVSS = require('./commonVulnerabilityScoreSystem')
const CvssScores = require('./cvss-scores')

const State = ['OPEN', 'FIXED', 'PENDING', 'REVIEW', 'TESTING'];
const VulnerabilitySchema = new Schema({
  schema_version: {
    type: Number,
    default: 0
  },
  cveId: {
    type: String,
    require: true,
    unique: true
  },
  title: {
    type: String,
    require: true
  },
  description: {
    type: String,
    require: true
  },
  dueDate:  {
    type: String,
    required: true
  },
  state: {
    type: String,
    enum: State,
    default: 'OPEN'
  },
  evidence: [
    {type: String}
  ],
  prevention: [
    {type: String}
  ],
  cvss: {
    type: Schema.Types.ObjectId,
    ref: 'CVSS',
    require: true
  },
  cvssScores: {
    type: Schema.Types.ObjectId,
    ref: 'CvssScores',
    require: true
  }
}, {timestamps: true})


VulnerabilitySchema.pre('deleteOne', async function (next)  {
  try {
    await CVSS.findByIdAndDelete(this._conditions.cvss.toString())
    await CvssScores.findByIdAndDelete(this._conditions.cvssScores.toString())
    next();
  } catch (err) {
    next(err);
  }
})
module.exports = mongoose.model('Vulnerability', VulnerabilitySchema);
