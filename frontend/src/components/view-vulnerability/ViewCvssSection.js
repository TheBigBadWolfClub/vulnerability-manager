import React from "react";
import InputLabel from "@material-ui/core/InputLabel";
import Select from "@material-ui/core/Select";
import Paper from "@material-ui/core/Paper";
import MenuItem from "@material-ui/core/MenuItem";

import './ViewCvssSection.css'
import Input from "@material-ui/core/Input";
import {makeStyles} from "@material-ui/core/styles";
import Chip from "@material-ui/core/Chip";


const useStyles = makeStyles((theme) => ({
    icon: {}, noIcon: {
        display: "none"
    },
}));

export default function ViewCvssSection(props) {
    const classes = useStyles();
    const idSection = props.idSection;
    const editMode = props.editMode;
    const fieldsArray = props.fieldsArray;
    const cvssData = props.cvssData;
    const [scoreValue, scoreSeverity] = props.scoresData;
    const helper = props.helper;
    const handleChange = props.handleChange;

    const getEnumOptions = (name) => {
        if (Object.keys(helper).length > 0)
            return helper.filter(item => item.name === name)[0];
        return helper
    }

    const getEnumValues = (name) => {
        if (Object.keys(helper).length > 0) {
            return getEnumOptions(name).type.enumValues
        }
        return [];
    }

    const getLabel = (itemId) => {
        return itemId[0].toUpperCase() + itemId.slice(1);
    }


    const getStyle = (sev) => {
        let viewColor = "green"
        if (sev === 'LOW') viewColor = 'orange';
        if (sev === 'MEDIUM') viewColor = 'orangered';
        if (sev === 'HIGH' || sev === 'CRITICAL') viewColor = 'red';

        return {backgroundColor: viewColor, color: 'white', marginLeft: '10px'};
    }

    return (
        <React.Fragment>
            <Paper className={"cvss-group-paper"} elevation={2}>
                <label className={"cvss-group-title"}>{idSection + ' Score'}</label>
                <div className={'cvss-group-scores'}>
                    <Chip label={scoreValue} style={getStyle(scoreSeverity)}/>
                    <Chip label={scoreSeverity} style={getStyle(scoreSeverity)}/>
                </div>
            </Paper>
            <section className={'cvss-group'}>
                {fieldsArray.map(itemId => {
                    return (
                        <div key={itemId + 'Div'} className={"cvss-group-item"}>
                            <InputLabel key={itemId + 'Label'}
                                        id="demo-simple-select-label">{getLabel(itemId)}</InputLabel>
                            <Select
                                key={itemId + 'Select'}
                                labelId={itemId}
                                name={itemId}
                                id={itemId}
                                value={cvssData[itemId] + ""}
                                onChange={handleChange}
                                classes={{
                                    icon: editMode ? classes.icon : classes.noIcon
                                }}
                                input={
                                    <Input
                                        disableUnderline={!editMode}
                                        readOnly={!editMode}
                                    />
                                }
                            >
                                {
                                    getEnumValues(itemId).map(enumOp => <MenuItem
                                        key={enumOp.name + 'MenuItem'}
                                        value={enumOp.name + ""}
                                        dense={true}>
                                        {enumOp.name}</MenuItem>)
                                }
                            </Select>
                        </div>
                    )
                })}
            </section>
        </React.Fragment>
    )
}
