import './ViewScores.css'
import React from "react";
import {fetchWrapper} from "../../graphql/ApiService";
import {getVulnerabilityFn} from "../../graphql/vulnerability";
import Paper from "@material-ui/core/Paper";
import CustomDivider from "./CustomDivider";
import {SnackBarCtx} from "../../context/SnackBarContext";


export default function ViewScores(props) {
  const {state, dispatch} = React.useContext(SnackBarCtx);
  const vulnerabilityId = props.vulnerabilityId;
  const [scoresData, setScoresData] = React.useState({})
  let pervLetter = '';

  React.useEffect(() => {
    fetchWrapper(getVulnerabilityFn(vulnerabilityId))
      .then(resData => {
        const scores = resData.data.getVulnerability.cvssScores;
        delete scores._id;
        setScoresData(scores)
      })
      .catch(err => {
        dispatch({type: "OPEN", msg: `${err.message}`})
        console.log(err)
      })
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);


  return (
    <React.Fragment>
      <div className={'view-scores'}>
        {
          ['base', 'temporal', 'environment'].map(group => {
            const addSection = pervLetter !== group[0]
            return <section key={group + '-section'} >
              <div key={group + '-div'} className={'view-scores-group'}>
              {Object.entries(scoresData)
                .filter(([key, value]) => key.startsWith(group))
                .map(([key, value]) => {
                  const label = key[0].toUpperCase() + key.slice(1)
                  return (
                    <div key={'section-' + key} className={'view-scores-item'}>
                      <Paper className={'view-scores-item-label'}>{label}</Paper>
                      <div className={'view-scores-item-value'}>{value}</div>
                    </div>
                  )
                })}
              </div>
              {addSection && <CustomDivider/>}
            </section>
          })


        }
      </div>
    </React.Fragment>
  )
}

