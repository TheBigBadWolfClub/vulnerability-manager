import './ViewArrayField.css'
import {fetchWrapper} from '../ApiService'
import {getArrayEntries} from '../../graphql/vulnerability'


import React from "react";

import Paper from "@material-ui/core/Paper";
import Button from "@material-ui/core/Button";
import TextareaAutosize from "@material-ui/core/TextareaAutosize";
import IconButton from "@material-ui/core/IconButton";
import DeleteIcon from '@material-ui/icons/Delete';
import CustomDivider from "../CustomDivider";



export default function ViewArrayField(props) {

  const vulnerabilityId = props.vulnerabilityId;
  const fieldArrayId = props.field;
  const label = props.label;
  const editMode = props.editMode;
  const [arrayData, setArrayData] = React.useState([])
  const newItemRef = React.createRef();


  React.useEffect(() => {
    fetchWrapper(getArrayEntries(vulnerabilityId, fieldArrayId))
      .then(resData => {
        const vulnerability = resData.data.getVulnerability;
        setArrayData(vulnerability[fieldArrayId]);
        console.log(arrayData)
      }).catch(err => {
      console.log(err)
    })

  }, []);

  const addNew = (event) => {
    event.preventDefault()
    const value = newItemRef.current.value;
    newItemRef.current.value = '';
    setArrayData(prevState => [...prevState, value])

  }

  const removeElem = (index) => () => {
    setArrayData(prevState => {
      prevState.splice(index, 1)
      return [...prevState]
    })
  }

  const submitChanges = (event) => {
    event.preventDefault()
    const arrBuilder = arrayData.map((ele) => `"${ele}"`).join(',')
    const requestBody = {
      query: `
      mutation {
        addArrayEntry(id: "${vulnerabilityId}", fieldId: "${fieldArrayId}", values: [${arrBuilder}]) {
          ${fieldArrayId}
        }
      }
      `
    }
    fetchWrapper(requestBody)
      .then(resData => {
        const res = resData.data.addArrayEntry;
        setArrayData(res[fieldArrayId]);
        console.log(arrayData)
      }).catch(err => {
      console.log(err)
    })

  }

  return (
    <React.Fragment>
      <section className={'view-array'}>
        <label className={'view-array-title'}>{label}</label>
        {arrayData.map((elem, index) => {
            return <div key={`${index}Div`} className={'view-array-elem'}>
              {editMode &&
              <IconButton key={`${index}IconButton`} type="submit" color="default" aria-label="upload picture" component="span"
                          onClick={removeElem(index)}>
                <DeleteIcon key={`${index}icon`}/>
              </IconButton>}
              <Paper key={index} className={'view-array-paper'} elevation={2}>{elem}</Paper>
            </div>
          }
        )}
      </section>
      {editMode && <section className={'view-array-form'}>
        <form onSubmit={addNew}>
          <label>Add new:</label>
          <div className={'view-array-addnew'}>
            <TextareaAutosize ref={newItemRef} required/>
            <Button variant={"outlined"} color="primary" type="submit">Add</Button>
          </div>

        </form>

        <CustomDivider />
        <div className={"view-array-save-action"}>
          <Button variant="contained" color="primary" size="small" onClick={submitChanges}>
            Save
          </Button>
        </div>
      </section>
      }
    </React.Fragment>
  )
}
