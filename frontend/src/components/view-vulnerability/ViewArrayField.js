import './ViewArrayField.css'
import {fetchWrapper} from '../../graphql/ApiService'
import {getSimplifiedVulnerability} from '../../graphql/vulnerability'


import React from "react";

import Paper from "@material-ui/core/Paper";
import Button from "@material-ui/core/Button";
import TextareaAutosize from "@material-ui/core/TextareaAutosize";
import IconButton from "@material-ui/core/IconButton";
import DeleteIcon from '@material-ui/icons/Delete';
import CustomDivider from "./CustomDivider";
import {SnackBarCtx} from "../../context/SnackBarContext";


export default function ViewArrayField(props) {
    const {state, dispatch} = React.useContext(SnackBarCtx);
    const vulnerabilityId = props.vulnerabilityId;
    const fieldArrayId = props.field;
    const label = props.label;
    const editMode = props.editMode;
    const [arrayData, setArrayData] = React.useState([])
    const newItemRef = React.createRef();


    React.useEffect(() => {
        fetchWrapper(getSimplifiedVulnerability(vulnerabilityId, fieldArrayId))
            .then(resData => {
                const vulnerability = resData.data.getVulnerability;
                setArrayData(vulnerability[fieldArrayId]);
            })
            .catch(err => {
                dispatch({type: "OPEN", msg: `${err.message}`})
                console.log(err)
            })
// eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    const addNew = (event) => {
        event.preventDefault()
        const value = newItemRef.current.value;
        newItemRef.current.value = '';
        setArrayData(prevState => [...prevState, value])

    }

    const removeElem = (index) => () => {
        setArrayData(prevState => {
            prevState.splice(index, 1)
            return [...prevState]
        })
    }

    const submitChanges = (event) => {
        event.preventDefault()
        const arrBuilder = arrayData.map((ele) => `"${ele}"`).join(',')
        const requestBody = {
            query: `
      mutation {
        addArrayEntry(id: "${vulnerabilityId}", fieldId: "${fieldArrayId}", values: [${arrBuilder}]) {
          ${fieldArrayId}
        }
      }
      `
        }
        fetchWrapper(requestBody)
            .then(resData => {
                const res = resData.data.addArrayEntry;
                setArrayData(res[fieldArrayId]);
                dispatch({type: "OPEN", msg: `${label} successfully updated.`})
            })
            .catch(err => {
                dispatch({type: "OPEN", msg: `${err.message}`})
                console.log(err)
            })

    }

    return (
        <React.Fragment>
            <section className={'view-array'}>
                <label className={'view-array-title'}>{label}</label>
                {arrayData.map((elem, index) => {
                        return <div key={`${index}Div`} className={'view-array-elem'}>
                            {editMode &&
                            <IconButton key={`${index}IconButton`} type="submit" color="default" aria-label="upload picture"
                                        component="span"
                                        onClick={removeElem(index)}>
                                <DeleteIcon key={`${index}icon`}/>
                            </IconButton>}
                            <Paper key={index} className={'view-array-paper'} elevation={2}>{elem}</Paper>
                        </div>
                    }
                )}
            </section>
            {editMode && <section className={'view-array-form'}>
                <form onSubmit={addNew}>
                    <label>Add new:</label>
                    <div className={'view-array-addnew'}>
                        <TextareaAutosize ref={newItemRef} required/>
                        <Button variant={"outlined"} color="primary" type="submit">Add</Button>
                    </div>

                </form>

                <CustomDivider/>
                <div className={"action-button-save"}>
                    <Button variant="contained" color="primary" size="small" onClick={submitChanges}>
                        Save
                    </Button>
                </div>
            </section>
            }
        </React.Fragment>
    )
}
