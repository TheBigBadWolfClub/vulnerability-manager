import React from "react";
import BarChart from "recharts/lib/chart/BarChart";
import CartesianGrid from "recharts/lib/cartesian/CartesianGrid";
import XAxis from "recharts/lib/cartesian/XAxis";
import YAxis from "recharts/lib/cartesian/YAxis";
import Tooltip from "recharts/lib/component/Tooltip";
import Legend from "recharts/lib/component/Legend";
import Bar from "recharts/lib/cartesian/Bar";
import {fetchWrapper} from "../../graphql/ApiService";
import {chartState} from "../../graphql/vulnerability";
import {SnackBarCtx} from "../../context/SnackBarContext";
import Paper from "@material-ui/core/Paper";

import './ChartStates.css'

export default function ChartOverdueStates(props) {

  const [chartData, setChartData] = React.useState([]);
  const {state, dispatch} = React.useContext(SnackBarCtx);


  React.useEffect(() => {
    fetchWrapper(chartState)
      .then(resData => {
        const serverData = resData.data.vulnerabilities;
        const counter = serverData
          .reduce((acc, cur) => {
          if (cur.dueDate < Date.now()) {
            acc[cur.state + '-due'] = ++acc[cur.state + '-due'] || 1;
          } else {
            acc[cur.state] = ++acc[cur.state] || 1;
          }
          return acc;
        }, {});

        const chartStats = [{},{}]
        Object.keys(counter).map( (key) => {
          if(key.endsWith('-due')) {
            const field = key.replace('-due', '')
            return {name: 'Overdue', [field]: counter[key]}
          }
          return {name: 'OnTime', [key]: counter[key]}
        }).map(r => {
          if(r.name === 'Overdue') return Object.assign(chartStats[0], r)
          if(r.name === 'OnTime') return Object.assign(chartStats[1], r)
        });

        setChartData(chartStats)
      })
      .catch(err => {
        dispatch({type: "OPEN", msg: `${err.message}`})
        console.log(err)
      })

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <React.Fragment>
      <Paper elevation={2} className={'chart-paper'}>
        <label className={'chart-label'}>Overdue status</label>
        <BarChart
          width={500}
          height={300}
          data={chartData}
          barCategoryGap={50}
          barGap={10}
          margin={{
            top: 5, right: 30, left: 20, bottom: 5,
          }}
        >
          <CartesianGrid strokeDasharray="3 3"/>
          <XAxis dataKey="name"/>
          <YAxis/>
          <Tooltip/>
          <Legend/>
          <Bar dataKey="OPEN" fill="red"/>
          <Bar dataKey="PENDING" fill="orange"/>
          <Bar dataKey="TESTING" fill="yellow"/>
          <Bar dataKey="REVIEW" fill="greenyellow"/>
          <Bar dataKey="FIXED" fill="green"/>
        </BarChart>
      </Paper>
    </React.Fragment>
  )

}
