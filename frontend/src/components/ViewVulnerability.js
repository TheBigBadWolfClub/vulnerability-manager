import React from "react";
import {getVulnerabilityFn} from "../graphql/vulnerability";
import TextField from "@material-ui/core/TextField";
import TextareaAutosize from "@material-ui/core/TextareaAutosize";

import './ViewVulnerability.css'
import ViewArrayField from "./view-vulnerability/ViewArrayField";
import FormControlLabel from "@material-ui/core/FormControlLabel";
import Switch from "@material-ui/core/Switch";
import CustomDivider from "./CustomDivider";
import GenericEdit from "./view-vulnerability/GenericEdit";


function ViewVulnerability(props) {
  const vulnerabilityId = props.match.params.id;
  const [viewData, setViewData] = React.useState({});
  const [isEdit, setIsEdit] = React.useState(false);


  React.useEffect(() => {
    fetch('http://localhost:8000/graphql', {
      method: 'POST',
      body: JSON.stringify(getVulnerabilityFn(vulnerabilityId)),
      headers: {
        'Content-Type': 'application/json',
        // Authorization: 'Bearer ' + token
      }
    }).then(res => {
      if (res.status !== 200 && res.status !== 201) {
        throw new Error('Failed!');
      }
      return res.json();
    }).then(resData => {
      const vulnerability = resData.data.getVulnerability;
      setViewData(vulnerability);
      console.log(viewData)
    }).catch(err => {
      console.log(err)
    })

  }, []);


  const handleEditChange = () => {
    setIsEdit(prevState => !prevState)
  }


  return (

    <React.Fragment>
      {console.log(viewData)}
      <FormControlLabel
        className={"edit-mode-switch"}
        control={
          <Switch
            checked={isEdit}
            onChange={handleEditChange}
            name="editMode"
            color="secondary"
          />
        }
        label="Edit Mode"
      />
      <CustomDivider/>
      <GenericEdit
        vulnerabilityId={vulnerabilityId}
        editMode={isEdit}
      />
      <ViewArrayField
        vulnerabilityId={vulnerabilityId}
        field={'evidence'}
        label={'Evidences'}
        editMode={isEdit}
      />
      <ViewArrayField
        vulnerabilityId={vulnerabilityId}
        field={'prevention'}
        label={'Prevention methods'}
        editMode={isEdit}
      />
    </React.Fragment>
  )
}

export default ViewVulnerability
