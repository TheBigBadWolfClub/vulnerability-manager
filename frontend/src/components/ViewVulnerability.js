import React from "react";
import PropTypes from 'prop-types';


import './ViewVulnerability.css'
import ViewArrayField from "./view-vulnerability/ViewArrayField";
import FormControlLabel from "@material-ui/core/FormControlLabel";
import Switch from "@material-ui/core/Switch";
import GenericEdit from "./view-vulnerability/GenericEdit";
import Tabs from "@material-ui/core/Tabs";
import Tab from "@material-ui/core/Tab";
import makeStyles from "@material-ui/core/styles/makeStyles";
import Typography from "@material-ui/core/Typography";
import Paper from "@material-ui/core/Paper";
import Box from "@material-ui/core/Box";
import ViewCvss from "./view-vulnerability/ViewCvss";
import ViewScores from "./view-vulnerability/ViewScores";


function TabPanel(props) {
  const {children, value, index, ...other} = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`scrollable-auto-tabpanel-${index}`}
      aria-labelledby={`scrollable-auto-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box p={3}>
          <Typography component={'span'} variant={'body2'}>{children}</Typography>
        </Box>
      )}
    </div>
  );
}

TabPanel.propTypes = {
  children: PropTypes.node,
  index: PropTypes.any.isRequired,
  value: PropTypes.any.isRequired,
};


const useStyles = makeStyles({
  root: {
    flexGrow: 1,
  },
});

function ViewVulnerability(props) {
  const classes = useStyles();
  const vulnerabilityId = props.match.params.id;
  const [isEdit, setIsEdit] = React.useState(false);
  const [value, setValue] = React.useState(0);


  const handleEditChange = () => {
    setIsEdit(prevState => !prevState)
  }
  const handleChange = (event, newValue) => {
    setValue(newValue);
  };


  return (

    <React.Fragment>
      <FormControlLabel
        className={"edit-mode-switch"}
        control={
          <Switch
            checked={isEdit}
            onChange={handleEditChange}
            name="editMode"
            color="secondary"
          />
        }
        label="Edit Mode"
      />

      <Paper className={classes.root}>
        <Tabs
          value={value}
          onChange={handleChange}
          indicatorColor="primary"
          textColor="primary"
          centered
        >
          <Tab label="Vulnerability"/>
          <Tab label="CVSS"/>
          <Tab label="Scores"/>
        </Tabs>
      </Paper>
      <TabPanel value={value} index={0}>
        <GenericEdit
          vulnerabilityId={vulnerabilityId}
          editMode={isEdit}
        />
        <ViewArrayField
          vulnerabilityId={vulnerabilityId}
          field={'evidence'}
          label={'Evidences'}
          editMode={isEdit}
        />
        <ViewArrayField
          vulnerabilityId={vulnerabilityId}
          field={'prevention'}
          label={'Prevention methods'}
          editMode={isEdit}
        />
      </TabPanel>
      <TabPanel value={value} index={1}>
        <ViewCvss
          vulnerabilityId={vulnerabilityId}
          label={'Prevention methods'}
          editMode={isEdit}
        />

      </TabPanel>
      <TabPanel value={value} index={2}>
        <ViewScores
          vulnerabilityId={vulnerabilityId}
        />
      </TabPanel>
    </React.Fragment>
  )
}

export default ViewVulnerability
