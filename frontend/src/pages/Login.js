import React, { Component } from 'react';

import './Login.css';
import LoginCtx from '../context/login-context'

class LoginPage extends Component {
    state = {
        isLogin: true
    };

    static contextType = LoginCtx;

    constructor(props) {
        super(props);
        this.usernameEl = React.createRef();
        this.passwordEl = React.createRef();
    }

    switchModeHandler = () => {
        this.setState(prevState => {
            return { isLogin: !prevState.isLogin };
        });
    };

    submitHandler = event => {
        event.preventDefault();
        const username = this.usernameEl.current.value;
        const password = this.passwordEl.current.value;

        if (username.trim().length === 0 || password.trim().length === 0) {
            return;
        }

        let requestBody = {
            query: `
        query {
          login(username: "${username}", password: "${password}") {
            userId
            token
            tokenExpiration
            role
          }
        }
      `
        };

        if (!this.state.isLogin) {
            requestBody = {
                query: `
          mutation {
            createUser(userInput: {username: "${username}", password: "${password}"}) {
              _id
              email
              role
            }
          }
        `
            };
        }

        fetch('http://localhost:8000/graphql', {
            method: 'POST',
            body: JSON.stringify(requestBody),
            headers: {
                'Content-Type': 'application/json'
            }
        })
          .then(res => {
              if (res.status !== 200 && res.status !== 201) {
                  throw new Error('Failed!');
              }
              return res.json();
          })
          .then(resData => {
            const loginData = resData.data.login
            if(loginData.token) {
              this.context.login(loginData)
            }
          })
          .catch(err => {
              console.log(err);
          });
    };

    render() {
        return (
          <form className="auth-form" onSubmit={this.submitHandler}>
              <div className="form-control">
                  <label htmlFor="username">Username</label>
                  <input type="input" id="username" ref={this.usernameEl} />
              </div>
              <div className="form-control">
                  <label htmlFor="password">Password</label>
                  <input type="password" id="password" ref={this.passwordEl} />
              </div>
              <div className="form-actions">
                  <button type="submit">Submit</button>
                  {/*<button type="button" onClick={this.switchModeHandler}>*/}
                  {/*    Switch to {this.state.isLogin ? 'Signup' : 'Login'}*/}
                  {/*</button>*/}
              </div>
          </form>
        );
    }
}

export default LoginPage;
