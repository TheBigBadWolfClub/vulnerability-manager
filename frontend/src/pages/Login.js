import React from 'react';

import './Login.css';
import {LoginCtx} from '../context/LoginContext'
import {fetchWrapper} from "../graphql/ApiService";
import {SnackBarCtx} from "../context/SnackBarContext";

export default function LoginPage(props) {
  const {authState, dispatchAuth} = React.useContext(LoginCtx);
  const {state, dispatch} = React.useContext(SnackBarCtx);
  let usernameEl = React.createRef();
  let passwordEl = React.createRef();

  const [isLogin, setIsLogin] =   React.useState(true);


  const switchModeHandler = () => {
    this.setState(prevState => {
      return {isLogin: !prevState.isLogin};
    });
  };

  const submitHandler = event => {
    event.preventDefault();
    const username = usernameEl.current.value;
    const password = passwordEl.current.value;

    if (username.trim().length === 0 || password.trim().length === 0) {
      return;
    }

    let requestBody = {
      query: `
        query {
          login(username: "${username}", password: "${password}") {
            userId
            token
            tokenExpiration
            role
          }
        }
      `
    };

    if (!isLogin) {
      requestBody = {
        query: `
          mutation {
            createUser(userInput: {username: "${username}", password: "${password}"}) {
              _id
              email
              role
            }
          }
        `
      };
    }

    fetchWrapper(requestBody)
      .then(resData => {
        const loginData = resData.data.login
        if (loginData.token) {
          dispatchAuth({ type: "LOGIN", authData: loginData })
        }
      })
      .catch(err => {
        dispatch({type: "OPEN", msg: `${err.message}`})
        console.log(err)
      })
  };


  return (
    <form className="auth-form" onSubmit={submitHandler}>
      <div className="form-control">
        <label htmlFor="username">Username</label>
        <input type="input" id="username" ref={usernameEl}/>
      </div>
      <div className="form-control">
        <label htmlFor="password">Password</label>
        <input type="password" id="password" ref={passwordEl}/>
      </div>
      <div className="form-actions">
        <button type="submit">Submit</button>
        {/*<button type="button" onClick={this.switchModeHandler}>*/}
        {/*    Switch to {this.state.isLogin ? 'Signup' : 'Login'}*/}
        {/*</button>*/}
      </div>
    </form>
  );

}
