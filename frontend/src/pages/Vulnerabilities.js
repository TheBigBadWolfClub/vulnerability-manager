import React from 'react'
import {useHistory} from 'react-router-dom';
import './Vulnerabilities.css'
import MaterialTable from "material-table";

import {deleteVulnerability, tableQuery} from '../graphql/vulnerability'
import {fetchWrapper} from "../graphql/ApiService";
import {SnackBarCtx} from "../context/SnackBarContext";
import {LoginCtx} from "../context/LoginContext";


function Vulnerabilities(props) {
    const history = useHistory();
    const [tableData, setTableData] = React.useState([]);
    const {state, dispatch} = React.useContext(SnackBarCtx);
    const {authState} = React.useContext(LoginCtx);

    React.useEffect(() => {
        fetchWrapper(tableQuery)
            .then(resData => {
                setTableData(resData.data.vulnerabilities)
            })
            .catch(err => {
                dispatch({type: "OPEN", msg: `${err.message}`})
                console.log(err)
            })

        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    const deleteHandler = (event, rowData) => {
        const bodyRequest = deleteVulnerability(rowData._id)
        fetchWrapper(bodyRequest)
            .then(resData => {
                setTableData(resData.data.deleteVulnerability)
                dispatch({type: "OPEN", msg: 'Vulnerability has been removed'})
            })
            .catch(err => {
                dispatch({type: "OPEN", msg: `${err.message}`})
                console.log(err)
            })

    }

    const getActions = () => {
        let actions = [];
        actions.push({
            icon: 'visibility',
            tooltip: 'View/Edit',
            onClick: (event, rowData) => {
                history.push({
                    pathname: `/view/${rowData._id}`
                });
            }
        })

        if (authState && authState.token)
            actions.push({
                icon: 'delete',
                tooltip: 'Delete',
                onClick: (event, rowData) => deleteHandler(event, rowData)
            })

        return actions;
    }

    const columns = [
        {
            title: "CveId",
            field: "cveId",
        },
        {
            title: "Title",
            field: "title",
        },
        {
            title: "vector",
            field: "cvss.attackVector",
        },
        {
            title: "Complexity",
            field: "cvss.attackComplexity",
        }, {
            title: "Base Sev.",
            field: "cvssScores.baseSeverity",
        }, {
            title: "Tmp. Sev.",
            field: "cvssScores.temporalSeverity",
        }, {
            title: "Env. Sev.",
            field: "cvssScores.environmentalSeverity",
        }
    ];


    return (
        <React.Fragment>
            <div className={'vulnerabilities-table'}>
                <MaterialTable
                    title="Vulnerabilities"
                    data={tableData}
                    columns={columns}
                    options={{search: false, paging: true, filtering: true, exportButton: false}}
                    isLoading={false}
                    actions={getActions()}
                />
            </div>
        </React.Fragment>
    )
}

export default Vulnerabilities
