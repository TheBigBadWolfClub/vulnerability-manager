import React, {useState} from 'react'
import {useHistory} from 'react-router-dom';
import './CreateVulnerability.css'
import {fetchWrapper} from "../graphql/ApiService";
import {createVulnerability} from "../graphql/vulnerability";
import {SnackBarCtx} from "../context/SnackBarContext";
import TextField from "@material-ui/core/TextField";
import InputLabel from "@material-ui/core/InputLabel";
import Select from '@material-ui/core/Select';
import MenuItem from "@material-ui/core/MenuItem";
import TextareaAutosize from "@material-ui/core/TextareaAutosize";

function CreateVulnerability(props) {
  const history = useHistory();
  const {state, dispatch} = React.useContext(SnackBarCtx);

  const [cveId, setCveId] = useState("");
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [vState, setVState] = useState("OPEN");
  const [selectedDate, setSelectedDate] = React.useState(Date.now());


  const handleSubmit = (event) => {
    event.preventDefault();
    const requestBody = createVulnerability(cveId, title, description, vState, selectedDate);
    fetchWrapper(requestBody)
      .then(resData => {
        dispatch({type: "OPEN", msg: 'Vulnerability successfully created.'})
        history.push({
          pathname: `/view/${resData.data.createVulnerability._id}`
        });
      })
      .catch(err => {
        dispatch({type: "OPEN", msg: `${err.message}`})
        console.log(err)
      })
  }

  const handleDate = (event) => {
    event.preventDefault();
    const time = new Date(event.target.value).getTime();
    setSelectedDate(time)
  }

  return (
    <React.Fragment>
      <div>
        <header><h3>Create new Vulnerability</h3></header>
        <form onSubmit={handleSubmit}>
          <section className={'create-section-row'}>
            <div className={'section-header'}>
              <TextField
                className={'section-header-item'}
                id="cveIdInput"
                name="cveId"
                type="text"
                label="Cve ID"
                placeholder="Add CVE-ID"
                onChange={e => setCveId(e.target.value)}
                required
                InputLabelProps={{
                  shrink: true,
                }}
              />
              <div className={'section-header-item'}>
                <InputLabel id={'stateLabel'}>State</InputLabel>
                <Select
                  id={'stateSelect'}
                  name={'state'}
                  labelId={"stateLabel"}
                  required
                  value={vState}
                  defaultValue={"OPEN"}
                  onChange={e => setVState(e.target.value)}
                >
                  <MenuItem value={"OPEN"}>OPEN</MenuItem>
                  <MenuItem value={"FIXED"}>FIXED</MenuItem>
                  <MenuItem value={"PENDING"}>PENDING</MenuItem>
                  <MenuItem value={"REVIEW"}>REVIEW</MenuItem>
                  <MenuItem value={"TESTING"}>TESTING</MenuItem>
                </Select>
              </div>
              <TextField
                className={'section-header-item'}
                id="date"
                label="Due Date"
                type="date"
                required
                defaultValue="2021-01-01"
                onChange={handleDate}
                InputLabelProps={{
                  shrink: true,
                }}
              />
            </div>
          </section>
          <section className={'create-section-row'}>
            <TextField
              id="titleInput"
              name="title"
              type="text"
              label="Title"
              placeholder="Add title"
              onChange={e => setTitle(e.target.value)}
              required
              InputLabelProps={{
                shrink: true,
              }}
            />
          </section>
          <section className={'create-section-row'}>
            <label>Description</label>
            <TextareaAutosize
              id={"description"}
              label={"Description"}
              onChange={e => setDescription(e.target.value)}
              placeholder="Add description"
              name="description"
              rows={4}
              required
            />
          </section>
          <section className={'create-section-row'}>
            <button className={'btn'} type="submit">Confirm</button>
          </section>
        </form>
      </div>
    </React.Fragment>
  );
}

export default CreateVulnerability
