const fullVector = (cvssDB) => {
  return `CVSS:3.1${baseScoreVector(cvssDB)}${temporalScore(cvssDB)}${environmentScore(cvssDB)}`
}

const baseScoreVector = (cvssDB) => {
  const vector = `
    /AV:${firstLetter(cvssDB._doc.attackVector)}
    /AC:${firstLetter(cvssDB._doc.attackComplexity)}
    /PR:${firstLetter(cvssDB._doc.privilegesRequired)}
    /UI:${firstLetter(cvssDB._doc.userInteraction)}
    /S:${firstLetter(cvssDB._doc.scope)}
    /C:${firstLetter(cvssDB._doc.confidentialityImpact)}
    /I:${firstLetter(cvssDB._doc.integrityImpact)}
    /A:${firstLetter(cvssDB._doc.availabilityImpact)}
    `;

  return vector.replace(/(\r\n|\n|\r)/gm, "")
    .replace(/\s+/g, "");
};

const temporalScore = (cvssDB) => {
  const vector = `
    ${shouldAttachToVector('E',cvssDB._doc.exploitCodeMaturity)}
    ${shouldAttachToVector('RL',cvssDB._doc.remediationLevel)}
    ${shouldAttachToVector('RC',cvssDB._doc.reportConfidence)}
    `;

  return vector.replace(/(\r\n|\n|\r)/gm, "")
    .replace(/\s+/g, "");
};

const environmentScore = (cvssDB) => {
  const vector = `
    ${shouldAttachToVector('CR',cvssDB._doc.confidentialityRequirement)}
    ${shouldAttachToVector('IR',cvssDB._doc.integrityRequirement)}
    ${shouldAttachToVector('AR',cvssDB._doc.availabilityRequirement)}
    ${shouldAttachToVector('MAV',cvssDB._doc.modifiedAttackVector)}
    ${shouldAttachToVector('MAC',cvssDB._doc.modifiedAttackComplexity)}
    ${shouldAttachToVector('MPR',cvssDB._doc.modifiedPrivilegesRequired)}
    ${shouldAttachToVector('MUI',cvssDB._doc.modifiedUserInteraction)}
    ${shouldAttachToVector('MS',cvssDB._doc.modifiedScope)}
    ${shouldAttachToVector('MC',cvssDB._doc.modifiedConfidentialityImpact)}
    ${shouldAttachToVector('MI',cvssDB._doc.modifiedIntegrityImpact)}
    ${shouldAttachToVector('MA',cvssDB._doc.modifiedAvailabilityImpact)}
    `;

  return vector.replace(/(\r\n|\n|\r)/gm, "")
    .replace(/\s+/g, "");
};

const shouldAttachToVector = (str, value) => {
  const letter = firstLetter(value)
  if (letter !== 'N')
    return `/${str}:${letter}`
  return '';
}

const firstLetter = (value) => {
  return value.charAt(0).toUpperCase();
}

module.exports = {fullVector}
