const mongoose = require('mongoose');
const bcrypt = require('bcrypt');

const Schema = mongoose.Schema;

const UserSchema = new Schema({
  schema_version: {
    type: Number,
    default: 0
  },
  username: {
    type: String,
    required: true
  },
  password: {
    type: String,
    required: true
  },
  role: {
    type: String,
    enum: ['ADMINISTRATOR', 'TESTER', 'SERVICE_MANAGER', 'CORPORATE'],
    require: true
  }
}, { timestamps: true })


UserSchema.pre('save', async function (next) {
  // check if password is present and is modified.
  try {
    if (this.password && this.isModified('password')) {
      this.password = bcrypt.hashSync(this.password, 12);
    }
    next();
  } catch (err) {
    next(err);
  }
});

module.exports = mongoose.model('User', UserSchema);

