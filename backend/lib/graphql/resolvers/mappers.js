const User = require('../../models/user');
const CVSS = require('../../models/commonVulnerabilityScoreSystem');
const CvssScores = require('../../models/cvss-scores');
const Vulnerability = require('../../models/vulnerability');
const {dateToString} = require('../../date-helper')

const user = async userId => {
  try {
    const result = await User.findById(userId);
    return {
      ...result._doc,
      _id: result.id
    };
  } catch (err) {
    throw err;
  }
};

const vulnerability = async vulnerabilityId => {
  try {
    const result = await Vulnerability.findById(vulnerabilityId);
    return {
      ...result._doc,
      _id: result.id
    }
  } catch (e) {
    throw e;
  }
}

const cvss = async (cvssId) => {
  try {
    const result = await CVSS.findById(cvssId);
    return {
      ...result._doc,
      _id: result.id,
      createdAt: dateToString(result._doc.createdAt),
      updatedAt: dateToString(result._doc.updatedAt)
    }
  } catch (e) {
    throw e;
  }
}

const cvssScore = async (id) => {
  try {
    const result = await CvssScores.findById(id);
    return {
      ...result._doc,
      _id: result.id,
      createdAt: dateToString(result._doc.createdAt),
      updatedAt: dateToString(result._doc.updatedAt)
    }
  } catch (e) {
    throw e;
  }
}

const transformVulnerability = async (vulnerability) => {
  const cvssData = await cvss(vulnerability._doc.cvss);
  const cvssScores = await cvssScore(vulnerability._doc.cvssScores)
  return {
    ...vulnerability._doc,
    _id: vulnerability.id,
    cvss: cvssData,
    cvssScores: cvssScores,
    createdAt: dateToString(vulnerability._doc.createdAt),
    updatedAt: dateToString(vulnerability._doc.updatedAt)
  };
};

const transformCVSS = async (cvss) => {
  const vulnerabilityData = await vulnerability( cvss._doc.vulnerability);
  const cvssScores = await cvssScore(cvss._doc.cvssScores)
  return {
    ...cvss._doc,
    _id: cvss.id,
    vulnerability: vulnerabilityData,
    cvssScores: cvssScores,
    createdAt: dateToString(cvss._doc.createdAt),
    updatedAt: dateToString(cvss._doc.updatedAt)
  }
}


exports.transformVulnerability = transformVulnerability;
exports.transformCVSS = transformCVSS;
