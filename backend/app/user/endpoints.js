const userService = require('./service');
const authRequired = require("../core/restapi/auth-required-middleware");
const express = require("express");

const userRoutes = express.Router();
userRoutes.get('/users/:username', authRequired, getUser);
userRoutes.get('/users', authRequired, getAll);
userRoutes.post('/login', login);
module.exports = userRoutes


async function login(req, res, next) {
    try {
        const username = req.body.username
        const password = req.body.password
        const entity = await userService.login(username, password)
        const restModel = {
            username: entity.user.username,
            token: entity.token,
            tokenExpiration: entity.tokenExpiration,
            role: entity.user.role
        }
        res.status(200).send(restModel).end();
    } catch (error) {
        next(error)
    }
}

async function getAll(req, res, next) {
    try {
        const users = await userService.list()
        const restModel = users.map(u => toRest(u))
        res.status(200).send(restModel).end();
    } catch (error) {
        next(error)
    }
}

async function getUser(req, res, next) {
    try {
        const user = await userService.get(req.params.username)
        const restModel = toRest(user)
        res.status(200).send(restModel).end();
    } catch (error) {
        next(error)
    }
}

function toRest(domain) {
    return {
        name: domain.username,
        role: domain.role,
    };
}



