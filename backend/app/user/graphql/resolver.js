const userService = require("../service");
const {ApiError, AUTH_REQUIRED_ERROR} = require("../../core/app-error");

module.exports = {
    users: async (args, req) => {
        if (!req.isAuth) {
            throw AUTH_REQUIRED_ERROR
        }
        try {
            const users = await userService.list();
            return  users.map(user => {
                return {
                    ...user._doc,
                    _id: user.id
                };
            });
        } catch (err) {
            if (err instanceof ApiError)
                throw err.toGraphQL()
            throw err;
        }
    },
    createUser: async (args, req) => {
        if (!req.isAuth) {
            throw AUTH_REQUIRED_ERROR
        }
        try {
            const inputs = args.userInput;
            return await userService.createUser(inputs.username, inputs.password, inputs.role)
        } catch (err) {
            if (err instanceof ApiError)
                throw err.toGraphQL()
            throw err;
        }
    },
    login: async ({username, password}) => {
        try {
            const entity = await userService.login(username, password)
            return {
                userId: entity.user._id,
                token: entity.token,
                tokenExpiration: entity.tokenExpiration,
                role: entity.user.role
            }
        } catch (err) {
            if (err instanceof ApiError)
                throw err.toGraphQL()
            throw err;
        }
    }
};
