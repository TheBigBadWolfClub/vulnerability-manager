const cvssRepository = require('../repository')
const {getVulnerability} = require('../../vulnerability/graphql/resolver')
const {transformCVSS} = require('../../graphql/resolver-mappers')

module.exports = {
    cvss: async (cvssId) => {
        try {
            const result = await cvssRepository.findById(cvssId);
            return transformCVSS(result)
        } catch (e) {
            throw e;
        }
    },
    allCvss: async () => {
        try {
            const results = await cvssRepository.find();
            const map = results.map(cvss => {
                return transformCVSS(cvss)
            });
            return map;
        } catch (e) {
            throw e;
        }
    },
    updateCvss: async (args, req) => {
        if (!req.isAuth) {
            throw new Error('Unauthenticated!');
        }
        try {
            const curr = await cvssRepository.findById(args.id);
            const updated = Object.assign(curr, args.input)
            updated.save();

            return await getVulnerability({id: updated._doc.vulnerability.toString()})
        } catch (err) {
            throw err
        }
    }
}
